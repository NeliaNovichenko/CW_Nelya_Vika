@using CW_Nelya_Vika.Models;

@model List<Graph>
@{
    ViewBag.Title = "ProblemGenerator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var form = document.getElementById("generator-form");
        form.addEventListener("submit", validate);
    });
    function validate(e) {
        if (validateCommunityCount()) {

        } else {
            e.preventDefault();
        }

        validateMinCommunityCount();
        validateMaxCommunityCount();
    };

    function validateCommunityCount() {
        var x = document.getElementById("communityCount").value;
        alert(x);
        if (parseInt(x) <= 0) {
            alert("Кількість розбиттів не може бути менше нуля");
            document.getElementById("communityCountError").innerHTML = "Не може бути менше нуля";
            return false;
        }

        var radioButtonOption = 5;
        if (document.getElementById("5").checked)
            radioButtonOption = 5;
        if (document.getElementById("10").checked)
            radioButtonOption = 10;
        if (document.getElementById("15").checked)
            radioButtonOption = 15;
        if (document.getElementById("20").checked)
            radioButtonOption = 20;
        if (document.getElementById("25").checked)
            radioButtonOption = 25;

        if (parseInt(x) >= radioButtonOption) {
            alert("Кількість розбиттів не може бути більша за кількість вершин");
            document.getElementById("communityCountError").innerHTML = "Кількість розбиттів не може бути більша за кількість вершин";
            return false;
        }
        document.getElementById("communityCountError").innerHTML = "";
        return true;

    };

    function validateMinCommunityCount() {
        var x = document.getElementById("minCommunityCount").value;
        if (x < 0)
            document.getElementById("minCommunityCountError").innerHTML = "Не може бути менше нуля";


    };

    function validateMaxCommunityCount() {
        var x = document.getElementById("maxCommunityCount").value;
        if (x < 0)
            document.getElementById("maxCommunityCountError").innerHTML = "Не може бути менше нуля";

    }
</script>

<div class="container body-content">
    <h2>Створити задачу</h2>
    @using (Html.BeginForm("ReadFromFile", "ProblemGenerator", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="jumbotron">
            <h3> Зчитати з файлу:</h3>
            <p><input type="file" name="file" /></p>
            <br />
            <button class="btn btn-primary center-block" type="submit" value="Upload">Зчитати граф з файлу</button>
            <br />
        </div>
    }

    @using (Html.BeginForm("Generate", "ProblemGenerator", FormMethod.Post, new { id = "generator-form" }))
    {
        <div class="jumbotron">
            <h3> Згенерувати:</h3>

            <p>Оберіть розмірність задачі:</p>
            <p>@Html.RadioButton("GraphClassification", "XS: 5 вершин", true, new {@id= "5"}) XS  </p>
            <p>@Html.RadioButton("GraphClassification", "S: 10 вершин", false, new { @id = "10" }) S </p>
            <p>@Html.RadioButton("GraphClassification", "M: 15 вершин", false, new { @id = "15" }) M </p>
            <p>@Html.RadioButton("GraphClassification", "L: 20 вершин", false, new { @id = "20" }) L </p>
            <p>@Html.RadioButton("GraphClassification", "XL: 25 вершин", false, new { @id = "25" }) XL </p>
            <p>
                Введіть кількість підграфів: <input type="number" id="communityCount" name="communityCount" 
                                                    onChange="validateCommunityCount()"  required/>
            <text id="communityCountError" style="color: red;"></text>
            </p>
            <p>
                Введіть мінімальну кількість вершин у підграфі: <input type="number" name="minCommunityCount"
                                                                       onChange="validateMinCommunityCount()"required/>
                <text id="minCommunityCountError" style="color: red;"></text>
            </p>
            <p>
                Введіть максимальну кількість вершин у підграфі: <input type="number" name="maxCommunityCount" 
                                                                        onChange="validateMaxCommunityCount()"required/>
                <text id="maxCommunityCountError" style="color: red;"></text>
            </p>
            <br />
            <button class="btn btn-primary center-block" type="submit" 
                    onclick="validate()">Згенерувати граф</button>
            <br />
        </div>

    }
    @using (@Html.BeginForm("ReadFromDb", "ProblemGenerator", FormMethod.Post))
    {
        <div class="jumbotron">
            <h3> Обрати з бази даних:</h3>

            <table class="table">
                <thead>
                    <tr>
                        <th>Обрати:</th>
                        <th>Id</th>
                        <th>Кількість вершин</th>
                        <th>Кількість ребер</th>
                        <th>Кількість розбиттів</th>
                        <th>Інтервал</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var graph in Model)
                    {
                        <tr>
                            <td>@Html.RadioButton("GraphId", graph.Id, true)</td>
                            <td>@graph.Id</td>
                            <td>@graph.Vertices.Count</td>
                            <td>@graph.Edges.Count</td>
                            <td>@graph.CommunityCount</td>
                            <td>@graph.MinCountInSubgraph - @graph.MaxCountInSubgraph</td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />

            <button class="btn btn-primary center-block" type="submit">Зчитати граф з бази даних</button>
            <br />
        </div>
    }

</div>
